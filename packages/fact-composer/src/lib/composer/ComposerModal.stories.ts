import {FactsService, MemoryAdapter} from "@repo/facts-service";
import {type InsertFact, type Tables} from "@repo/facts-db";
import {fn} from "@storybook/test";
import ComposerModal from "./ComposerModal.svelte";
import type {Meta, StoryObj} from "@storybook/svelte";

const meta = {
  title: "features/ComposerModal",
  component: ComposerModal,
  tags: ["autodocs"],
  parameters: {
    layout: "centered",
  },
  args: {
    onChange: fn(),
    onOpenChange: fn(),
  },
} satisfies Meta<ComposerModal>;

export default meta;
type Story = StoryObj<typeof meta>;

const db: FactsService = new FactsService(
  (table: keyof Tables) => new MemoryAdapter(table),
);

export const _ComposerModal: Story = {
  args: {
    db,
    closeFocus: undefined,
    value: "This is a fact",
  },
};

const seed: InsertFact[] = [
  {
    content: "The quick brown fox jumps over the lazy dog",
  },
  {
    content: "Started from the bottom now we're here",
  },
  {
    content:
      "This is a really long paragraph generated by Code Pilot. It's a great tool for generating random text. All you have to do is type 'lorem' followed by the number of words you want to generate. For example, 'lorem 10' will generate a 10-word paragraph of lorem ipsum text. You can also generate a paragraph of random text by typing 'random' followed by the number of words you want to generate. For example, 'random 10' will generate a 10-word paragraph of random text. Code Pilot is a great tool for generating random text. It's easy to use and it's free!",
  },
];

for (const fact of seed) {
  db.facts.add(fact);
}
